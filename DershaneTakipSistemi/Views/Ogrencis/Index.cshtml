@model IEnumerable<DershaneTakipSistemi.Models.Ogrenci>

@{
    ViewData["Title"] = "Öğrenciler";
}

<h1>@ViewData["Title"]</h1>

@* Arama Formu *@
<form asp-action="Index" method="get" class="mb-3">
    @* GET metodu ile arama yapalım *@
    <div class="input-group">
        <input type="text" name="aramaMetni" class="form-control" placeholder="Ad veya Soyada göre ara..." value="@ViewData["GecerliArama"]" />
        <button type="submit" class="btn btn-info">
            <i class="bi bi-search"></i> Ara
        </button>
        <a asp-action="Index" class="btn btn-secondary ms-2">
            <i class="bi bi-x-lg"></i> Temizle @* Temizle butonu *@
        </a>
    </div>
</form>


<div class="d-flex justify-content-between mb-3">
    @* Butonları yan yana koymak için flexbox *@
    <p>
        <a asp-action="Create" class="btn btn-primary">Yeni Öğrenci Ekle</a>
    </p>

</div>
@* ... tablonun geri kalanı aynı ... *@
<table class="table table-striped table-hover table-bordered">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.AdSoyad) <!-- Birleşik AdSoyad -->
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CepTelefonu)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Sinifi) @* Yeni Başlık *@
            </th>
            <th>
                @Html.DisplayNameFor(model => model.KayitTarihi)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AktifMi)
            </th>
            <th>İşlemler</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.AdSoyad) <!-- Birleşik AdSoyad -->
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CepTelefonu)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Sinifi.Ad) @* Sınıfın Adını gösteriyoruz *@
                    @* Eğer bir öğrencinin sınıfı null ise, item.Sinifi null olacağı için hata almamak adına
                   şöyle bir kontrol eklenebilir: @(item.Sinifi != null ? item.Sinifi.Ad : "Atanmamış") *@
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.KayitTarihi)
                </td>
                <td>
                    @(item.AktifMi ? "Evet" : "Hayır") <!-- AktifMi gösterimi -->
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-primary me-1">Düzenle</a>
                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-outline-danger">Sil</a>
                </td>
            </tr>
        }
    </tbody>
</table>